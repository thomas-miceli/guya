server {
    listen 80;
    #listen 443 ssl http2;
    #listen [::]:443 ssl http2;
    server_name ***servername***;
    root ***/path/to/public/***;

    # ssl on;
    # ssl_certificate ***/path/to/cer***;
    # ssl_certificate_key  ***/path/to/key***;

    location / {
        try_files $uri /index.php$is_args$args;
    }

    location ~ ^/index\.php(/|$) {
        fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;

        # When you are using symlinks to link the document root to the
        # current version of your application, you should pass the real
        # application path instead of the path to the symlink to PHP
        # FPM.
        # Otherwise, PHP's OPcache may not properly detect changes to
        # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
        # for more information).
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        # Prevents URIs that include the front controller. This will 404:
        # http://domain.tld/index.php/some-path
        # Remove the internal directive to allow URIs like this
        internal;
    }

    return 404 for all other php files not matching the front controller
    this prevents access to other php files you don't want to be accessible.

    location ~ \.php$ {
        return 404;
    }

    location ~ \.git {
        client_max_body_size 0; # Git pushes can be massive, just to make sure nginx doesn't suddenly cut the connection add this.
        auth_basic "Git Login"; # Whatever text will do.
        auth_basic_user_file "***/path/to/.gitpasswd"***;
        include /etc/nginx/fastcgi_params;
        fastcgi_param SCRIPT_FILENAME /usr/lib/git-core/git-http-backend;
        fastcgi_param GIT_HTTP_EXPORT_ALL "";
        fastcgi_param GIT_PROJECT_ROOT ***/path/to/repos/***;
        fastcgi_param PATH_INFO $uri;
        fastcgi_param REMOTE_USER $remote_user;
        fastcgi_param PATH_INFO $1;
        fastcgi_pass  unix:/var/run/fcgiwrap.socket;

    }
    error_log /var/log/nginx/guya_error.log;
    access_log /var/log/nginx/guya_access.log;
}

#server {
#    listen 80;
#    server_name ***servername***;
#    return 301 https://$server_name$request_uri;
#}
